add_executable(tser_example)
add_executable(tser_example2)
target_sources(tser_example PRIVATE example.cpp)
target_sources(tser_example2 PRIVATE example2.cpp)
target_link_libraries(tser_example PRIVATE tser)
target_link_libraries(tser_example2 PRIVATE tser)
if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
    target_compile_options(tser_example PRIVATE /W4 /permissive-)
    target_compile_options(tser_example2 PRIVATE /W4 /permissive-)
elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    target_compile_options(tser_example PRIVATE -Wall -Wextra -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-missing-prototypes -Wno-exit-time-destructors)
    target_compile_options(tser_example2 PRIVATE -Wall -Wextra -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-missing-prototypes -Wno-exit-time-destructors)
    #it would be nice if googletest could fix their clang warnings :-)
    target_compile_options(tser_example PRIVATE -Wno-undef -Wno-global-constructors -Wno-language-extension-token -Wno-exit-time-destructors -Wno-shift-sign-overflow)
    target_compile_options(tser_example2 PRIVATE -Wno-undef -Wno-global-constructors -Wno-language-extension-token -Wno-exit-time-destructors -Wno-shift-sign-overflow)
endif()
